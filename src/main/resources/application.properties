# --- Nome da Aplicação ---
# Define o nome da nossa aplicação.
spring.application.name=steamclone

# --- Configuração do Banco de Dados H2 (O "Armazém") ---

# Esta é a "morada" do nosso banco de dados.
# "jdbc:h2:mem:steamdb" significa:
# - jdbc:h2: Use o driver do H2
# - mem: Guarde tudo na memória RAM (é super rápido, mas apaga quando a aplicação fecha)
# - steamdb: O nome que estamos a dar ao nosso banco de dados.
spring.datasource.url=jdbc:h2:mem:steamdb

# O "login" e "senha" padrão do H2. Como é só para desenvolvimento,
# deixamos o login como 'sa' (system administrator) e a senha vazia.
spring.datasource.username=sa
spring.datasource.password=

# O nome técnico do "driver" que o Spring usa para falar com o H2.
spring.datasource.driverClassName=org.h2.Driver


# --- Configuração do H2 Console (O "Visualizador") ---

# Isto ativa uma página web especial onde podemos VER o nosso banco de dados.
# É uma ferramenta de aprendizagem FANTÁSTICA.
spring.h2.console.enabled=true

# A morada onde vamos aceder a esse visualizador no nosso browser.
# (ex: http://localhost:8080/h2-console)
spring.h2.console.path=/h2-console


# --- Configuração do Spring Data JPA (O "Tradutor Mágico") ---

# "ddl-auto = update" é a configuração mais importante aqui.
# Ela diz ao Spring: "Olhe para as minhas classes Java (como Usuario e Jogo).
# Se as tabelas correspondentes não existirem no banco, CRIE-AS.
# Se eu adicionar uma nova coluna na minha classe (ex: 'idade' no Usuario),
# ATUALIZE a tabela no banco automaticamente."
spring.jpa.hibernate.ddl-auto=update

# Isto diz ao JPA para "falar o dialeto" específico do H2.
# Se um dia mudarmos para PostgreSQL, só precisamos de mudar esta linha.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Mostra no console/terminal todo o código SQL que o JPA está
# a executar "por trás das cenas". Ótimo para aprender.
spring.jpa.show-sql=true
# --- Mudar a porta do servidor ---
# (O padrão é 8080, vamos mudar para 8081)